apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edgedelta.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edgedelta.labels" . | nindent 4 }}
    {{- if .Values.labels }}
      {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
    edgedelta/agent-type: processor
spec:
  {{- if not (or .Values.deployment.autoscaling.enabled .Values.deployment.autoscaling.external) }}
  replicas: {{ default 1 .Values.deployment.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "edgedelta.selectorLabels" . | nindent 6 }}
      edgedelta/agent-type: processor
  strategy:
  {{- if .Values.updateStrategy }}
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- else }}
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      {{- if or .Values.annotations .Values.podSecurity.apparmor.enabled }}
      annotations:
      {{- if .Values.podSecurity.apparmor.enabled }}
        container.apparmor.security.beta.kubernetes.io/agent: {{ .Values.podSecurity.apparmor.profile }}
      {{- end }}
      {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
      {{- end }}
      labels:
      {{- include "edgedelta.labels" . | nindent 8 }}
      {{- if .Values.labels }}
        {{- toYaml .Values.labels | nindent 8 }}
      {{- end }}
      {{- if and .Values.secretApiKey.name .Values.secretApiKey.key }}
      {{ $lookupResult := lookup "v1" "Secret" .Release.Namespace .Values.secretApiKey.name }}
      {{- if .Values.secretApiKey.value }}
        edgedelta/api-key-sha: {{ .Values.secretApiKey.value | sha256sum | substr 0 48 }}
      {{- else if $lookupResult }}
        edgedelta/api-key-sha: {{ index $lookupResult.data .Values.secretApiKey.key | b64dec | sha256sum | substr 0 48 }}
      {{- end }}
      {{- end }}
        edgedelta/agent-type: processor
    spec:
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "edgedelta.fullname" . }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml .Values.deployment.topologySpreadConstraints | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurity.securityContextConstraints.create -}}
      {{- if and .Values.podSecurity.seLinuxContext .Values.podSecurity.seLinuxContext.seLinuxOptions }}
      securityContext:
        seLinuxOptions:
{{ toYaml .Values.podSecurity.seLinuxContext.seLinuxOptions | indent 10 }}
      {{- end }}
      {{- else if eq  (include "isOpenShift" .) "true"}}
      securityContext:
        seLinuxOptions:
          user: "system_u"
          role: "system_r"
          type: "spc_t"
          level: "s0"
      {{- end }}
      containers:
        # agent container
        - name: {{ .Chart.Name }}-agent
          image: {{ .Values.image.fullPath | default (printf "%s/%s:%s" .Values.repository .Values.image.name (.Values.image.tag | default .Chart.AppVersion)) }}
          {{- if .Values.edConfigContent }}
          command:
            - /edgedelta/edgedelta
          args:
            - -c
            - /var/edgedelta/config.yml
          {{- end }}
          {{ $usePorts := gt (len .Values.ports) 0 }}
          {{- if or .Values.storePort .Values.profilerPort $usePorts }}
          ports:
          {{- end }}
          {{- if .Values.storePort }}
            - name: metrics
              containerPort: {{ .Values.storePort }}
          {{- end }}
          {{- if .Values.profilerPort }}
            - name: profiler
              containerPort: {{ .Values.profilerPort }}
          {{- end }}
          {{- if $usePorts }}
          {{- range .Values.ports }}
            - name: {{ .name }}
              containerPort: {{ .port }}
          {{- end }}
          {{- end }}
          env:
            - name: ED_FLEET_TYPE
              value: gateway
            {{- if .Values.apiKey }}
            - name:  ED_API_KEY
              value: {{ .Values.apiKey | quote }}
            {{- else if and .Values.secretApiKey.name .Values.secretApiKey.key }}
            {{ $lookupResult := lookup "v1" "Secret" .Release.Namespace .Values.secretApiKey.name }}
            {{- if or $lookupResult .Values.secretApiKey.value .Values.secretApiKey.enable }}
            - name:  ED_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretApiKey.name }}
                  key: {{ .Values.secretApiKey.key }}
            {{- end }}
            {{- end }}
            {{- if .Values.storePort }}
            - name:  STORE_PORT
              value: "{{ .Values.storePort }}"
            {{- end }}
            {{- if .Values.profilerPort }}
            - name: PROFILER_PORT
              value: "{{ .Values.profilerPort }}"
          {{- end }}
            {{- if .Values.edTraceFiles }}
            - name:  ED_TRACE_FILES
              value: {{ .Values.edTraceFile | quote }}
            {{- end }}
            {{- if .Values.edApiEndpoint }}
            - name:  ED_API_ENDPOINT
              value: {{ .Values.edApiEndpoint }}
            {{- end }}
            {{- if .Values.edBackendDisabled }}
            - name:  ED_BACKEND_DISABLED
              value: "{{ .Values.edBackendDisabled }}"
            {{- end }}
            {{- if .Values.edSkipConfDownload }}
            - name:  ED_SKIP_CONF_DOWNLOAD
              value: "{{ .Values.edSkipConfDownload }}"
            {{- end }}
            {{- if .Values.edTagOverride }}
            - name:  ED_TAG_OVERRIDE
              value: {{ .Values.edTagOverride }}
            {{- end }}
            {{- if .Values.edClusterName }}
            - name:  ED_CLUSTER_NAME
              value: {{ .Values.edClusterName }}
            {{- end }}
            {{- if .Values.edSkipTlsVerify }}
            - name: ED_SKIP_K8S_TLS_VERIFY
              value: "{{ .Values.edSkipTlsVerify }}"
            {{- end }}
            {{- if .Values.edOrgID }}
            - name:  ED_ORG_ID
              value: {{ .Values.edOrgID }}
            {{- end }}
            {{- if .Values.edSuppressionMode }}
            - name:  ED_SUPPRESSION_MODE
              value: "{{ .Values.edSuppressionMode }}"
            {{- end }}
            {{- if .Values.edWorkflows }}
            - name:  ED_WORKFLOWS
              value: {{ .Values.edWorkflows }}
            {{- end }}
             {{- if .Values.edEnableControllerDiscovery }}
            - name: ED_ENABLE_PARENT_K8S_CONTROLLER_DISCOVERY
              value: "1"
            {{- end }}
            {{- if .Values.edWorkflowPrefixes }}
            - name:  ED_WORKFLOW_PREFIXES
              value: {{ .Values.edWorkflowPrefixes }}
            {{- end }}
            {{- if .Values.httpProxy }}
            - name:  HTTP_PROXY
              value: {{ .Values.httpProxy }}
            {{- end }}
            {{- if .Values.httpsProxy }}
            - name:  HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
            {{- end }}
            {{- if .Values.noProxy }}
            - name:  NO_PROXY
              value: {{ .Values.noProxy }}
            {{- end }}
            {{- if .Values.edCustomTags }}
            - name:  ED_CUSTOM_TAGS
              value: "{{ .Values.edCustomTags }}"
            {{- end }}
            {{- if .Values.goMemLimit }}
            - name: GOMEMLIMIT
              value: {{ .Values.goMemLimit }}
            {{- end }}
            - name: ED_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: ED_K8S_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ED_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            {{- if .Values.coordinatorProps.enabled }}
            - name: ED_COORDINATOR_CLIENT_ENABLED
              value: "1"
            {{- if .Values.coordinatorProps.endpoint }}
            - name: ED_COORDINATOR_CLIENT_ENDPOINT
              value: "{{ .Values.coordinatorProps.endpoint }}"
            {{- end }}
            {{- end }}
            {{- range .Values.envs }}
            - name: {{ .name }}
              {{- if .value }}
              value: "{{ .value }}"
              {{- end }}
              {{- if .valueFrom }}
              valueFrom:
                {{ toYaml .valueFrom | nindent 16 }}
              {{- end }}
            {{- end }}
            {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretKeyRef.name }}
                  key: {{ .secretKeyRef.key }}
            {{- end }}
            {{- if .Values.compactorProps.enabled }}
            - name: ED_COMPACT_SERVICE_ENDPOINT
              value: {{ include "edgedelta.fullname" . }}-compactor-svc.{{.Release.Namespace}}.{{.Values.compactorProps.serviceDNSSuffix}}:{{.Values.compactorProps.port}}
            {{- end }}
            {{- if .Values.rollUpProps.enabled }}
            - name: ED_METRIC_ROLLUP_ENABLED
              value: "1"
            - name: ED_METRIC_ROLLUP_DESTINATION_OVERRIDE
              value: {{ include "edgedelta.fullname" . }}-rollup-svc.{{.Release.Namespace}}.{{.Values.rollUpProps.serviceDNSSuffix}}:{{.Values.rollUpProps.port}}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            {{- if .Values.edConfigContent }}
            - name: config-volume
              mountPath: /var/edgedelta
            {{- end }}
            {{- if (.Values.volumeProps).volumeMounts }}
              {{- toYaml .Values.volumeProps.volumeMounts | nindent 12 }}
            {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        {{- if .Values.edConfigContent }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}
        {{- end }}
        {{- if (.Values.volumeProps).volumes }}
          {{- toYaml .Values.volumeProps.volumes | nindent 8 }}
        {{- end }}
{{- if .Values.deployment.autoscaling.enabled }}
---
apiVersion: {{ template "autoscaling.apiVersion" . }}
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "edgedelta.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edgedelta.labels" . | nindent 4 }}
    {{- if .Values.labels }}
      {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
spec:
  minReplicas: {{ .Values.deployment.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.deployment.autoscaling.maxReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "edgedelta.fullname" . }}
  metrics:
    {{- if .Values.deployment.autoscaling.targetForMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.deployment.autoscaling.targetForMemoryUtilizationPercentage }}
    {{- end }}
    {{- if .Values.deployment.autoscaling.targetForCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.deployment.autoscaling.targetForCPUUtilizationPercentage }}
    {{- end }}
    {{- with .Values.deployment.autoscaling.customMetric -}}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.deployment.autoscaling.behavior }}
  behavior:
  {{- toYaml . | nindent 4 }}
  {{- end }}
{{- end }}
