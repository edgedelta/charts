apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "edgedelta.fullname" . }}
  labels:
    {{- include "edgedelta.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "edgedelta.selectorLabels" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
      {{- if .Values.annotations }}
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
      labels:
      {{- include "edgedelta.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "edgedelta.fullname" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          {{- if .Values.storePort }}
          ports:
            - name: metrics
              hostPort: {{ .Values.storePort }}
              containerPort: {{ .Values.storePort }}
          {{- end }}
          env:
            {{- if .Values.apiKey }}
            - name:  ED_API_KEY
              value: "{{ .Values.apiKey }}"
            {{- end }}
            {{- if .Values.secretApiKey }}
            {{- if .Values.secretApiKey.name }}
            - name:  ED_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretApiKey.name }}
                  key: {{ .Values.secretApiKey.key }}
            {{- end }}
            {{- end }}
            {{- if .Values.storePort }}
            - name:  STORE_PORT
              value: "{{ .Values.storePort }}"
            {{- end }}
            {{- if .Values.edTraceFiles }}
            - name:  ED_TRACE_FILES
              value: {{ .Values.edTraceFiles }}
            {{- end }}
            {{- if .Values.edApiEndpoint }}
            - name:  ED_API_ENDPOINT
              value: {{ .Values.edApiEndpoint }}
            {{- end }}
            {{- if .Values.edBackendDisabled }}
            - name:  ED_BACKEND_DISABLED
              value: "{{ .Values.edBackendDisabled }}"
            {{- end }}
            {{- if .Values.edSkipConfDownload }}
            - name:  ED_SKIP_CONF_DOWNLOAD
              value: "{{ .Values.edSkipConfDownload }}"
            {{- end }}
            {{- if .Values.edTagOverride }}
            - name:  ED_TAG_OVERRIDE
              value: {{ .Values.edTagOverride }}
            {{- end }}
            {{- if .Values.edOrgID }}
            - name:  ED_ORG_ID
              value: {{ .Values.edOrgID }}
            {{- end }}
            {{- if .Values.edSuppressionMode }}
            - name:  ED_SUPPRESSION_MODE
              value: "{{ .Values.edSuppressionMode }}"
            {{- end }}
            {{- if .Values.edWorkflows }}
            - name:  ED_WORKFLOWS
              value: {{ .Values.edWorkflows }}
            {{- end }}
            - name:  ED_LEADER_ELECTION_ENABLED
            {{- if .Values.edDisableLeaderElection }}
              value: "0"
            {{- else }}
              value: "1"
            {{- end }}
            {{- if .Values.edWorkflowPrefixes }}
            - name:  ED_WORKFLOW_PREFIXES
              value: {{ .Values.edWorkflowPrefixes }}
            {{- end }}
            {{- if .Values.httpProxy }}
            - name:  HTTP_PROXY
              value: {{ .Values.httpProxy }}
            {{- end }}
            {{- if .Values.httpsProxy }}
            - name:  HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
            {{- end }}
            {{- if .Values.noProxy }}
            - name:  NO_PROXY
              value: {{ .Values.noProxy }}
            {{- end }}
            # pass node hostname to agent
            - name: ED_HOST_OVERRIDE
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- range .Values.envs }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}
            {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretKeyRef.name }}
                  key: {{ .secretKeyRef.key }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            {{- if .Values.edConfigContent }}
            - name: config-volume
              mountPath: /edgedelta/config.yml
              subPath: config.yml
            {{- end }}
            {{- if .Values.persistingCursorProps.enabled }}
            - name: persisting-cursor-storage
              mountPath: {{ .Values.persistingCursorProps.containerMountPath }}
            {{- end }}
      imagePullSecrets:
        - name: regcred
      terminationGracePeriodSeconds: 10
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        {{- if .Values.edConfigContent }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}
        {{- end }}
        {{- if .Values.persistingCursorProps.enabled }}
        - name: persisting-cursor-storage
          hostPath:
            path: {{ .Values.persistingCursorProps.hostMountPath }}
        {{- end }}