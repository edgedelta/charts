{{- if eq .Values.deployment.kind "Deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "edgedelta.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "edgedelta.labels" . | nindent 4 }}
    {{- if .Values.labels }}
      {{- toYaml .Values.labels | nindent 4 }}
    {{- end }}
    edgedelta/agent-type: processor
spec:
  replicas: {{ default 1 .Values.deployment.replicas }}
  selector:
    matchLabels:
      {{- include "edgedelta.selectorLabels" . | nindent 6 }}
  strategy:
  {{- if .Values.updateStrategy }}
    {{- toYaml .Values.updateStrategy | nindent 4 }}
  {{- else }}
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      {{- if .Values.annotations }}
      annotations:
        {{- toYaml .Values.annotations | nindent 8 }}
      {{- end }}
      labels:
      {{- include "edgedelta.labels" . | nindent 8 }}
      {{- if .Values.labels }}
        {{- toYaml .Values.labels | nindent 8 }}
      {{- end }}
      {{- if and .Values.secretApiKey.name .Values.secretApiKey.key }}
      {{ $lookupResult := lookup "v1" "Secret" .Release.Namespace .Values.secretApiKey.name }}
      {{- if .Values.secretApiKey.value }}
        edgedelta/api-key-sha: {{ .Values.secretApiKey.value | sha256sum | substr 0 48 }}
      {{- else if $lookupResult }}
        edgedelta/api-key-sha: {{ index $lookupResult.data .Values.secretApiKey.key | b64dec | sha256sum | substr 0 48 }}
      {{- end }}
      {{- end }}
        edgedelta/agent-type: processor
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "edgedelta.fullname" . }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      containers:
        # agent container
        - name: {{ .Chart.Name }}-agent
          image: {{ if .Values.image.fullPath }}{{ .Values.image.fullPath }}{{ else }}{{ .Values.image.name }}:{{ .Values.image.tag | default .Chart.AppVersion }}{{ end }}
          {{- if .Values.edConfigContent }}
          command:
            - /edgedelta/edgedelta
          args:
            - -c
            - /var/edgedelta/config.yml
          {{- end }}
          {{- if or .Values.storePort .Values.dataPort .Values.profilerPort }}
          ports:
          {{- end }}
          {{- if .Values.storePort }}
            - name: metrics
              containerPort: {{ .Values.storePort }}
          {{- end }}
          {{- if .Values.dataPort }}
            - name: data
              containerPort: {{ .Values.dataPort }}
          {{- end }}
          {{- if .Values.profilerPort }}
            - name: profiler
              containerPort: {{ .Values.profilerPort }}
          {{- end }}
          env:
            {{- if .Values.apiKey }}
            - name:  ED_API_KEY
              value: {{ .Values.apiKey | quote }}
            {{- else if and .Values.secretApiKey.name .Values.secretApiKey.key }}
            {{ $lookupResult := lookup "v1" "Secret" .Release.Namespace .Values.secretApiKey.name }}
            {{- if $lookupResult }}
            - name:  ED_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretApiKey.name }}
                  key: {{ .Values.secretApiKey.key }}
            {{- end }}
            {{- end }}
            {{- if .Values.storePort }}
            - name:  STORE_PORT
              value: "{{ .Values.storePort }}"
            {{- end }}
            {{- if .Values.profilerPort }}
            - name: PROFILER_PORT
              value: "{{ .Values.profilerPort }}"
          {{- end }}
            {{- if .Values.edTraceFiles }}
            - name:  ED_TRACE_FILES
              value: {{ .Values.edTraceFile | quote }}
            {{- end }}
            {{- if .Values.edApiEndpoint }}
            - name:  ED_API_ENDPOINT
              value: {{ .Values.edApiEndpoint }}
            {{- end }}
            {{- if .Values.edBackendDisabled }}
            - name:  ED_BACKEND_DISABLED
              value: "{{ .Values.edBackendDisabled }}"
            {{- end }}
            {{- if .Values.edSkipConfDownload }}
            - name:  ED_SKIP_CONF_DOWNLOAD
              value: "{{ .Values.edSkipConfDownload }}"
            {{- end }}
            {{- if .Values.edTagOverride }}
            - name:  ED_TAG_OVERRIDE
              value: {{ .Values.edTagOverride }}
            {{- end }}
            {{- if .Values.edSkipTlsVerify }}
            - name: ED_SKIP_K8S_TLS_VERIFY
              value: "{{ .Values.edSkipTlsVerify }}"
            {{- end }}
            {{- if .Values.edOrgID }}
            - name:  ED_ORG_ID
              value: {{ .Values.edOrgID }}
            {{- end }}
            {{- if .Values.edSuppressionMode }}
            - name:  ED_SUPPRESSION_MODE
              value: "{{ .Values.edSuppressionMode }}"
            {{- end }}
            {{- if .Values.edWorkflows }}
            - name:  ED_WORKFLOWS
              value: {{ .Values.edWorkflows }}
            {{- end }}
             {{- if .Values.edEnableControllerDiscovery }}
            - name: ED_ENABLE_PARENT_K8S_CONTROLLER_DISCOVERY
              value: "1"
            {{- end }}
            - name:  ED_LEADER_ELECTION_ENABLED
            {{- if .Values.edDisableLeaderElection }}
              value: "0"
            {{- else }}
              value: "1"
            {{- end }}
            {{- if .Values.edWorkflowPrefixes }}
            - name:  ED_WORKFLOW_PREFIXES
              value: {{ .Values.edWorkflowPrefixes }}
            {{- end }}
            {{- if .Values.httpProxy }}
            - name:  HTTP_PROXY
              value: {{ .Values.httpProxy }}
            {{- end }}
            {{- if .Values.httpsProxy }}
            - name:  HTTPS_PROXY
              value: {{ .Values.httpsProxy }}
            {{- end }}
            {{- if .Values.noProxy }}
            - name:  NO_PROXY
              value: {{ .Values.noProxy }}
            {{- end }}
            {{- if .Values.edCustomTags }}
            - name:  ED_CUSTOM_TAGS
              value: "{{ .Values.edCustomTags }}"
            {{- end }}
            {{- if .Values.goMemLimit }}
            - name: GOMEMLIMIT
              value: {{ .Values.goMemLimit }}
            {{- end }}
            # pass pod name to agent
            - name: ED_HOST_OVERRIDE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- range .Values.envs }}
            - name: {{ .name }}
              value: "{{ .value }}"
            {{- end }}
            {{- range .Values.secrets }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretKeyRef.name }}
                  key: {{ .secretKeyRef.key }}
            {{- end }}
            {{- if .Values.aggregatorProps.enabled }}
            - name: ED_AGENT_MODE
              value: processor
            - name: ED_AGGREGATOR_DESTINATION
              value: "http://ed-aggregator-svc.{{.Release.Namespace}}.{{.Values.aggregatorProps.serviceDNSSuffix}}:{{.Values.aggregatorProps.port}}"
            {{- end }}
            {{- if .Values.httpRecorderProps.enabled }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          imagePullPolicy: Always
          volumeMounts:
            {{- if .Values.edConfigContent }}
            - name: config-volume
              mountPath: /var/edgedelta
            {{- end }}
            {{- if .Values.httpRecorderProps.enabled }}
            - mountPath: /var/captured_requests/
              name: capturedrequests
              subPathExpr: $(POD_NAME)
            {{- end }}
            {{- if (.Values.volumeProps).volumeMounts }}
              {{- toYaml .Values.volumeProps.volumeMounts | nindent 12 }}
            {{- end }}
        {{- if .Values.httpRecorderProps.enabled }}
        # httprecorder container
        - name: {{ .Chart.Name }}-httprecorder
          image: {{ .Values.httpRecorderProps.image }}
          imagePullPolicy: Always
          command:
            - /edgedelta/httprecorder
            - --port
            - "{{ .Values.httpRecorderProps.port }}"
            - --record_directory
            - /var/captured_requests/
            - --record_modes
            - body
            - --custom_responses
            - /.well-known/fastly/logging/challenge=200|*
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          ports:
          - containerPort: {{.Values.httpRecorderProps.port}}
            name: http
            protocol: TCP
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 56Mi
          volumeMounts:
          - mountPath: /var/captured_requests/
            name: capturedrequests
            subPathExpr: $(POD_NAME)
        {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
        {{- if .Values.edConfigContent }}
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}
        {{- end }}
        {{- if .Values.httpRecorderProps.enabled }}
        - name: capturedrequests
          hostPath:
            path: /var/log/
        {{- end }}
        {{- if (.Values.volumeProps).volumes }}
          {{- toYaml .Values.volumeProps.volumes | nindent 8 }}
        {{- end }}
{{- if .Values.httpRecorderProps.enabled }}
---
# Service for httprecorder
apiVersion: v1
kind: Service
metadata:
  name: ed-httprecorder-svc
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    {{- include "edgedelta.labels" . | nindent 4 }}
    edgedelta/agent-type: processor
  ports:
  - port: {{ .Values.httpRecorderProps.port }}
    name: httprecorder-port
{{- end }}
{{- if .Values.dataPort }}
---
# Service for data supply
apiVersion: v1
kind: Service
metadata:
  name: ed-data-supply-svc
  namespace: {{ .Release.Namespace }}
spec:
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 86400 # 24h
  selector:
    {{- include "edgedelta.labels" . | nindent 4 }}
    edgedelta/agent-type: processor
  ports:
  - port: {{ .Values.dataPort }}
    name: data-port
{{- end }}
{{- end -}}